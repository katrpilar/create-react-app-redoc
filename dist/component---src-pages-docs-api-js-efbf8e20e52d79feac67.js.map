{"version":3,"sources":["webpack:///./src/pages/docs/api.js"],"names":["Api","specUrl","apiOnly","options","noAutoAuth","showExtensions","theme"],"mappings":"2FAAA,0FA+SeA,UAbH,IAIV,kBAAC,kBAAD,CAAiBC,QAASC,EAASC,QAAS,CAAEC,YAAY,EAAMC,eAAgB,CAAC,aAAc,cAAgB,gBAAiB,YAAa,aAC3IC,MAAOA","file":"component---src-pages-docs-api-js-efbf8e20e52d79feac67.js","sourcesContent":["// import React, { Component } from 'react';\n// // import {\n// //   BrowserRouter as Router,\n// //   Switch,\n// //   Route,\n// //   Link\n// // } from \"react-router-dom\";\n// import setsterLogo from '../../images/setster-logo.png';\n// import * as Semantic from 'semantic-ui-react'\n// import theme from '../../theme.js';\n//// import { RedocStandalone} from 'redoc';\n// import '../../App.css';\n// import { RedocStandalone} from 'redoc';\n// import apiOnly from '../../apiOnly.json';\n// import MenuNav from \"../../components/MenuNav\"\n\n// // import developerPortal from '../developerPortal.json';\n// const  { Input, Menu, Icon, Message } = Semantic\n\n\n// class Api extends Component {\n//   state = { activeItem: 'Docs' }\n\n//   handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n//   render() {\n//     const { activeItem } = this.state\n\n//     return (\n//       // <Router>\n//       <div >\n//         <header className=\"App-header\">\n// <MenuNav activeItem={activeItem} handleItemClick={this.handleItemClick}/>\n//         </header>\n        \n// <RedocStandalone specUrl={apiOnly} options={{ noAutoAuth: true, showExtensions: [\"x-examples\", \"x-tagGroups\",  \"x-displayName\", \"x-nesting\", \"x-filters\"],hideLoading: true,\n//     theme: theme\n//   }}  />\n//       </div>\n\n//     );\n//   }\n// }\n\n// export default Api;\n\n\n\n/* eslint-disable max-classes-per-file */\n/* eslint-disable react/no-multi-comp */\n\n// import { createMedia } from '@artsy/fresnel'\n// import PropTypes from 'prop-types'\n// import React, { Component } from 'react'\n// import {\n//   Button,\n//   Container,\n//   Divider,\n//   Grid,\n//   Header,\n//   Icon,\n//   Image,\n//   List,\n//   Menu,\n//   Segment,\n//   Sidebar,\n//   Visibility,\n// } from 'semantic-ui-react'\n// import '../../App.css';\n// import setsterLogo from '../../images/setster-logo.png';\n// import apiOnly from '../../apiOnly.json';\n// import theme from '../../theme.js';\n// import { RedocStandalone} from 'redoc';\n\n\n// const { MediaContextProvider, Media } = createMedia({\n//   breakpoints: {\n//     mobile: 0,\n//     tablet: 768,\n//     computer: 1024,\n//   },\n// })\n\n// /* Heads up!\n//  * HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled\n//  * components for such things.\n//  */\n// const HomepageHeading = ({ mobile }) => (\n//   <Container text>\n//   </Container>\n// )\n\n// HomepageHeading.propTypes = {\n//   mobile: PropTypes.bool,\n// }\n\n// /* Heads up!\n//  * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\n//  * It can be more complicated, but you can create really flexible markup.\n//  */\n// class DesktopContainer extends Component {\n//   state = {}\n\n//   hideFixedMenu = () => this.setState({ fixed: false })\n//   showFixedMenu = () => this.setState({ fixed: true })\n\n//   render() {\n//     const { children } = this.props\n//     const { fixed } = this.state\n\n//     return (\n//       <Media greaterThan='mobile'>\n//         <Visibility\n//           once={false}\n//           onBottomPassed={this.showFixedMenu}\n//           onBottomPassedReverse={this.hideFixedMenu}\n//           style={{height: '90px'}}\n//         >\n//           <Segment\n//             inverted\n//             textAlign='center'\n//             style={{ padding: '1em 0em',   background: 'linear-gradient( -63.43000000000001deg, #d0021b 15%, #9d0214 85%)' }}\n//             vertical\n//             className=\"App-header\"\n//           >\n//             <Menu\n//               fixed={fixed ? 'top' : null}\n//               inverted={!fixed}\n//               pointing={!fixed}\n//               secondary={!fixed}\n//               size='large'\n//               style={{border: 'none'}}\n//             >\n//               <Menu.Item style={{width: '8.5em'}}\n//         href=\"/\"\n//         style={{marginLeft: '2.75em'}}\n//         >\n//           <img src={setsterLogo} alt=\"logo\" style={{width: '100px'}} />       \n\n//         </Menu.Item>   \n//               <Container className=\"menu-container\">\n//                 <Menu.Item as='a' href=\"/docs/api\" active>Documentation</Menu.Item>\n//                 <Menu.Item as='a' href=\"/docs/booking\">Booking Widget</Menu.Item>\n//                 <Menu.Item as='a' href=\"https://www.setster.com/scheduling-features\">\n//                   Features\n//                 </Menu.Item>\n//                 <Menu.Item\n//                   color='#fffff'\n//                   href=\"https://support.setster.com/hc/en-us\"\n//                   style={{padding: '.5em 1.14285714em'}}\n//                 >\n//                   <Icon className=\"setster-icon\" size=\"large\" style={{height: '1.1em', width:'1.1em'}}/>\n//                   Support\n//                   </Menu.Item>                \n//                 <Menu.Item position='right'>\n//                   {/* <Button as='a' inverted={!fixed}>\n//                     Log in\n//                   </Button> */}\n//                   <Button as='a' inverted={!fixed} primary={fixed} style={{ marginLeft: '0.5em',  backgroundColor: 'rgba(255,255,255,0.1)', boxShadow: 'none !important' }} className=\"sign-up\" href=\"https://www.setster.com/login\">\n//                     Log In\n//                   </Button>\n//                   <Button as='a' inverted={!fixed} primary={fixed} style={{ marginLeft: '0.5em',  backgroundColor: 'rgba(255,255,255,0.1)', boxShadow: 'none !important' }} className=\"sign-up\" href=\"https://www.setster.com/onboarding/personal\">\n//                     Sign Up\n//                   </Button>\n//                 </Menu.Item>\n//               </Container>\n//             </Menu>\n//             {/* <HomepageHeading /> */}\n//           </Segment>\n//         </Visibility>\n\n//         {children}\n//       </Media>\n//     )\n//   }\n// }\n\n// DesktopContainer.propTypes = {\n//   children: PropTypes.node,\n// }\n\n// class MobileContainer extends Component {\n//   state = {}\n\n//   handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n//   handleToggle = () => this.setState({ sidebarOpened: true })\n\n//   render() {\n//     const { children } = this.props\n//     const { sidebarOpened } = this.state\n\n//     return (\n//       <Media as={Sidebar.Pushable} at='mobile'>\n//         <Sidebar.Pushable>\n//           <Sidebar\n//             as={Menu}\n//             animation='overlay'\n//             inverted\n//             onHide={this.handleSidebarHide}\n//             vertical\n//             visible={sidebarOpened}\n//           >\n//             <Menu.Item as='a' href=\"/\">\n//               Home\n//             </Menu.Item>\n//             <Menu.Item as='a' href=\"/docs/api\" active>Documentation</Menu.Item>\n//                 <Menu.Item as='a' href=\"/docs/booking\">Booking Widget</Menu.Item>\n//                 <Menu.Item as='a' href=\"https://www.setster.com/scheduling-features\">\n//                   Features\n//                 </Menu.Item>\n//             <Menu.Item as='a' href=\"https://support.setster.com/hc/en-us\">Support</Menu.Item>\n//             <Menu.Item as='a' href=\"https://www.setster.com/login\">Log in</Menu.Item>\n//             <Menu.Item as='a' href=\"https://www.setster.com/onboarding/personal\">Sign Up</Menu.Item>\n//           </Sidebar>\n\n//           <Sidebar.Pusher dimmed={sidebarOpened}>\n//             <Segment\n//               inverted\n//               textAlign='center'\n//               style={{ minHeight: 350, padding: '1em 0em' }}\n//               vertical\n//             >\n//               <Container>\n//                 <Menu inverted pointing secondary size='large'>\n//                   <Menu.Item onClick={this.handleToggle}>\n//                     <Icon name='sidebar' />\n//                   </Menu.Item>\n//                   <Menu.Item position='right'>\n//                     {/* <Button as='a' inverted>\n//                       Log in\n//                     </Button> */}\n//                     <Button as='a' inverted style={{ marginLeft: '0.5em' }}>\n//                       Sign Up\n//                     </Button>\n//                   </Menu.Item>\n//                 </Menu>\n//               </Container>\n//               <HomepageHeading mobile />\n//             </Segment>\n\n//             {children}\n//           </Sidebar.Pusher>\n//         </Sidebar.Pushable>\n//       </Media>\n//     )\n//   }\n// }\n\n// MobileContainer.propTypes = {\n//   children: PropTypes.node,\n// }\n\n// const ResponsiveContainer = ({ children }) => (\n//   /* Heads up!\n//    * For large applications it may not be best option to put all page into these containers at\n//    * they will be rendered twice for SSR.\n//    */\n//   <MediaContextProvider>\n//     <DesktopContainer>{children}</DesktopContainer>\n//     <MobileContainer>{children}</MobileContainer>\n//   </MediaContextProvider>\n// )\n\n// ResponsiveContainer.propTypes = {\n//   children: PropTypes.node,\n// }\n\n// const Api = () => (\n//   <>\n//   <ResponsiveContainer style={{backgroundColor: '#fff'}} />\n// <RedocStandalone specUrl={apiOnly} options={{ noAutoAuth: true, showExtensions: [\"x-examples\", \"x-tagGroups\",  \"x-displayName\", \"x-nesting\", \"x-filters\"],\n//     theme: theme\n//   }}  />\n//   </>\n// )\n\n// export default Api\n\n\nimport React from 'react'\nimport '../../App.css';\nimport apiOnly from '../../apiOnly.json';\nimport theme from '../../theme.js';\nimport { RedocStandalone} from 'redoc';\nimport NewNav from \"../../components/NewNav\"\nimport MenuContext from '../../components/NewNav';\n\n// export const wrapRootElement = Provider;\n\nconst Api = () => {\n  return(\n    // <NewNav currentActiveItem=\"Docs\">\n    // <NewNav activeItem=\"Docs\">\n  <RedocStandalone specUrl={apiOnly} options={{ noAutoAuth: true, showExtensions: [\"x-examples\", \"x-tagGroups\",  \"x-displayName\", \"x-nesting\", \"x-filters\"],\n    theme: theme\n  }}  />\n  // </NewNav>\n  // <NewNav currentActiveItem=\"Docs\">\n  // </NewNav>\n\n)}\n\nexport default Api;"],"sourceRoot":""}