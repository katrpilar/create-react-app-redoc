{"version":3,"sources":["webpack:///./src/pages/docs/booking.js"],"names":["createMedia","breakpoints","mobile","tablet","computer","MediaContextProvider","Media","HomepageHeading","text","DesktopContainer","state","hideFixedMenu","setState","fixed","showFixedMenu","render","children","this","props","greaterThan","once","onBottomPassed","onBottomPassedReverse","style","height","inverted","textAlign","padding","background","vertical","className","pointing","secondary","size","border","Item","width","href","marginLeft","src","setsterLogo","alt","as","active","color","position","primary","backgroundColor","boxShadow","Component","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","Sidebar","Pushable","at","Menu","animation","onHide","visible","Pusher","dimmed","minHeight","onClick","name","ResponsiveContainer","Booking","specUrl","bookingOnly","options","noAutoAuth","showExtensions","theme"],"mappings":"gUA6EwCA,sBAAY,CAClDC,YAAa,CACXC,OAAQ,EACRC,OAAQ,IACRC,SAAU,QAJNC,E,EAAAA,qBAAsBC,E,EAAAA,MAYxBC,EAAkB,EAAGL,YACzB,kBAAC,IAAD,CAAWM,MAAI,I,IAYXC,E,oFACJC,MAAQ,G,EAERC,cAAgB,IAAM,EAAKC,SAAS,CAAEC,OAAO,I,EAC7CC,cAAgB,IAAM,EAAKF,SAAS,CAAEC,OAAO,I,sCAE7CE,OAAA,WAAU,MACAC,EAAaC,KAAKC,MAAlBF,SACAH,EAAUI,KAAKP,MAAfG,MAER,OACE,kBAACP,EAAD,CAAOa,YAAY,UACjB,kBAAC,IAAD,CACEC,MAAM,EACNC,eAAgBJ,KAAKH,cACrBQ,sBAAuBL,KAAKN,cAC5BY,MAAO,CAACC,OAAQ,SAEhB,kBAAC,IAAD,CACEC,UAAQ,EACRC,UAAU,SACVH,MAAO,CAAEI,QAAS,UAAaC,WAAY,qEAC3CC,UAAQ,EACRC,UAAU,cAEV,kBAAC,IAAD,CACEjB,MAAOA,EAAQ,MAAQ,KACvBY,UAAWZ,EACXkB,UAAWlB,EACXmB,WAAYnB,EACZoB,KAAK,QACLV,MAAO,CAACW,OAAQ,SAEhB,kBAAC,IAAKC,KAAN,CAAWZ,MAAO,CAACa,MAAO,SAChCC,KAAK,IACLd,MAAO,CAACe,WAAY,WAElB,yBAAKC,IAAKC,IAAaC,IAAI,OAAOlB,MAAO,CAACa,MAAO,YAG7C,kBAAC,IAAD,CAAWN,UAAU,kBACnB,kBAAC,IAAKK,KAAN,CAAWO,GAAG,IAAIL,KAAK,aAAvB,iBACA,kBAAC,IAAKF,KAAN,CAAWO,GAAG,IAAIL,KAAK,gBAAgBM,QAAM,GAA7C,kBACA,kBAAC,IAAKR,KAAN,CAAWO,GAAG,IAAIL,KAAK,+CAAvB,YAGA,kBAAC,IAAKF,KAAN,CACES,MAAM,SACNP,KAAK,uCACLd,MAAO,CAACI,QAAS,sBAEjB,kBAAC,IAAD,CAAMG,UAAU,eAAeG,KAAK,QAAQV,MAAO,CAACC,OAAQ,QAASY,MAAM,WAL7E,WAQA,kBAAC,IAAKD,KAAN,CAAWU,SAAS,SAIlB,kBAAC,IAAD,CAAQH,GAAG,IAAIjB,UAAWZ,EAAOiC,QAASjC,EAAOU,MAAO,CAAEe,WAAY,QAAUS,gBAAiB,wBAAyBC,UAAW,mBAAqBlB,UAAU,UAAUO,KAAK,iCAAnL,UAGA,kBAAC,IAAD,CAAQK,GAAG,IAAIjB,UAAWZ,EAAOiC,QAASjC,EAAOU,MAAO,CAAEe,WAAY,QAAUS,gBAAiB,wBAAyBC,UAAW,mBAAqBlB,UAAU,UAAUO,KAAK,+CAAnL,gBAUTrB,I,GAvEsBiC,aAiFzBC,E,oFACJxC,MAAQ,G,EAERyC,kBAAoB,IAAM,EAAKvC,SAAS,CAAEwC,eAAe,I,EAEzDC,aAAe,IAAM,EAAKzC,SAAS,CAAEwC,eAAe,I,sCAEpDrC,OAAA,WAAU,MACAC,EAAaC,KAAKC,MAAlBF,SACAoC,EAAkBnC,KAAKP,MAAvB0C,cAER,OACE,kBAAC9C,EAAD,CAAOoC,GAAIY,IAAQC,SAAUC,GAAG,UAC9B,kBAAC,IAAQD,SAAT,KACE,kBAAC,IAAD,CACEb,GAAIe,IACJC,UAAU,UACVjC,UAAQ,EACRkC,OAAQ1C,KAAKkC,kBACbtB,UAAQ,EACR+B,QAASR,GAET,kBAAC,IAAKjB,KAAN,CAAWO,GAAG,IAAIL,KAAK,KAAvB,QAGA,kBAAC,IAAKF,KAAN,CAAWO,GAAG,IAAIL,KAAK,aAAvB,iBACI,kBAAC,IAAKF,KAAN,CAAWO,GAAG,IAAIL,KAAK,gBAAgBM,QAAM,GAA7C,kBACA,kBAAC,IAAKR,KAAN,CAAWO,GAAG,IAAIL,KAAK,+CAAvB,YAGJ,kBAAC,IAAKF,KAAN,CAAWO,GAAG,IAAIL,KAAK,wCAAvB,WACA,kBAAC,IAAKF,KAAN,CAAWO,GAAG,IAAIL,KAAK,iCAAvB,UACA,kBAAC,IAAKF,KAAN,CAAWO,GAAG,IAAIL,KAAK,+CAAvB,YAGF,kBAAC,IAAQwB,OAAT,CAAgBC,OAAQV,GACtB,kBAAC,IAAD,CACE3B,UAAQ,EACRC,UAAU,SACVH,MAAO,CAAEwC,UAAW,IAAKpC,QAAS,WAClCE,UAAQ,GAER,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMJ,UAAQ,EAACM,UAAQ,EAACC,WAAS,EAACC,KAAK,SACrC,kBAAC,IAAKE,KAAN,CAAW6B,QAAS/C,KAAKoC,cACvB,kBAAC,IAAD,CAAMY,KAAK,aAEb,kBAAC,IAAK9B,KAAN,CAAWU,SAAS,SAIlB,kBAAC,IAAD,CAAQH,GAAG,IAAIjB,UAAQ,EAACF,MAAO,CAAEe,WAAY,UAA7C,cAMN,kBAAC/B,EAAD,CAAiBL,QAAM,KAGxBc,M,GA5DiBiC,aAwE9B,MAAMiB,EAAsB,EAAGlD,cAK7B,kBAACX,EAAD,KACE,kBAACI,EAAD,KAAmBO,GACnB,kBAACkC,EAAD,KAAkBlC,IAgBPmD,UARC,IACd,kBAACD,EAAD,CAAqB3C,MAAO,CAACwB,gBAAiB,SAChD,kBAAC,kBAAD,CAAiBqB,QAASC,EAAaC,QAAS,CAAEC,YAAY,EAAMC,eAAgB,CAAC,aAAc,cAAgB,gBAAiB,YAAa,aAC7IC,MAAOA,S","file":"component---src-pages-docs-booking-js-8ace7603f95d58bab613.js","sourcesContent":["  // import React, { Component } from 'react';\n  // // import {\n  // //   BrowserRouter as Router,\n  // //   Switch,\n  // //   Route,\n  // //   Link\n  // // } from \"react-router-dom\";\n  // import setsterLogo from '../../images/setster-logo.png';\n  // import * as Semantic from 'semantic-ui-react'\n  // import theme from '../../theme.js';\n  \n  // import '../../App.css';\n  // import { RedocStandalone} from 'redoc';\nimport bookingOnly from '../../bookingOnly.json';\n// import MenuNav from \"../../components/MenuNav\"\n// const  { Input, Menu, Icon, Message } = Semantic\n\n\n// class Booking extends Component {\n//   state = { activeItem: 'booking widget' }\n\n//   handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n//   render() {\n//     const { activeItem } = this.state\n\n//     return (\n//       // <Router>\n//       <div >\n//       <header className=\"App-header\">\n//           <MenuNav activeItem={activeItem} handleItemClick={this.handleItemClick}/>\n//         </header>\n// <RedocStandalone specUrl={bookingOnly} options={{ noAutoAuth: true, showExtensions: [\"x-examples\", \"x-tagGroups\", \"x-codeSamples\", \"x-displayName\", \"x-nesting\", \"x-filters\"], untrustedSpec: true,\n//     theme: theme, hideLoading: true\n//   }}  />\n//         {/* <body>\n//         <script src=\"node_modules/redoc/bundles/redoc.standalone.js\"> </script> \n\n//         </body> */}\n//         {/* <redoc spec-url={redocTest}/> */}\n\n//         {/* <p className=\"App-intro\">\n//           To get started, edit <code>src/App.js</code> and save to reload.\n//         </p> */}\n//       </div>\n//       // </Router>\n//     );\n//   }\n// }\n\n// export default Booking;\n\n\nimport { createMedia } from '@artsy/fresnel'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport {\n  Button,\n  Container,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  List,\n  Menu,\n  Segment,\n  Sidebar,\n  Visibility,\n} from 'semantic-ui-react'\nimport '../../App.css';\nimport setsterLogo from '../../images/setster-logo.png';\nimport apiOnly from '../../apiOnly.json';\nimport theme from '../../theme.js';\nimport { RedocStandalone} from 'redoc';\n\n\nconst { MediaContextProvider, Media } = createMedia({\n  breakpoints: {\n    mobile: 0,\n    tablet: 768,\n    computer: 1024,\n  },\n})\n\n/* Heads up!\n * HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled\n * components for such things.\n */\nconst HomepageHeading = ({ mobile }) => (\n  <Container text>\n  </Container>\n)\n\nHomepageHeading.propTypes = {\n  mobile: PropTypes.bool,\n}\n\n/* Heads up!\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\n * It can be more complicated, but you can create really flexible markup.\n */\nclass DesktopContainer extends Component {\n  state = {}\n\n  hideFixedMenu = () => this.setState({ fixed: false })\n  showFixedMenu = () => this.setState({ fixed: true })\n\n  render() {\n    const { children } = this.props\n    const { fixed } = this.state\n\n    return (\n      <Media greaterThan='mobile'>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n          style={{height: '90px'}}\n        >\n          <Segment\n            inverted\n            textAlign='center'\n            style={{ padding: '1em 0em',   background: 'linear-gradient( -63.43000000000001deg, #d0021b 15%, #9d0214 85%)' }}\n            vertical\n            className=\"App-header\"\n          >\n            <Menu\n              fixed={fixed ? 'top' : null}\n              inverted={!fixed}\n              pointing={!fixed}\n              secondary={!fixed}\n              size='large'\n              style={{border: 'none'}}\n            >\n              <Menu.Item style={{width: '8.5em'}}\n        href=\"/\"\n        style={{marginLeft: '2.75em'}}\n        >\n          <img src={setsterLogo} alt=\"logo\" style={{width: '100px'}} />       \n\n        </Menu.Item>   \n              <Container className=\"menu-container\">\n                <Menu.Item as='a' href=\"/docs/api\" >Documentation</Menu.Item>\n                <Menu.Item as='a' href=\"/docs/booking\" active>Booking Widget</Menu.Item>\n                <Menu.Item as='a' href=\"https://www.setster.com/scheduling-features\">\n                  Features\n                </Menu.Item>\n                <Menu.Item\n                  color='#fffff'\n                  href=\"https://support.setster.com/hc/en-us\"\n                  style={{padding: '.5em 1.14285714em'}}\n                >\n                  <Icon className=\"setster-icon\" size=\"large\" style={{height: '1.1em', width:'1.1em'}}/>\n                  Support\n                  </Menu.Item>                \n                <Menu.Item position='right'>\n                  {/* <Button as='a' inverted={!fixed}>\n                    Log in\n                  </Button> */}\n                  <Button as='a' inverted={!fixed} primary={fixed} style={{ marginLeft: '0.5em',  backgroundColor: 'rgba(255,255,255,0.1)', boxShadow: 'none !important' }} className=\"sign-up\" href=\"https://www.setster.com/login\">\n                    Log In\n                  </Button>\n                  <Button as='a' inverted={!fixed} primary={fixed} style={{ marginLeft: '0.5em',  backgroundColor: 'rgba(255,255,255,0.1)', boxShadow: 'none !important' }} className=\"sign-up\" href=\"https://www.setster.com/onboarding/personal\">\n                    Sign Up\n                  </Button>\n                </Menu.Item>\n              </Container>\n            </Menu>\n            {/* <HomepageHeading /> */}\n          </Segment>\n        </Visibility>\n\n        {children}\n      </Media>\n    )\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nclass MobileContainer extends Component {\n  state = {}\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n  handleToggle = () => this.setState({ sidebarOpened: true })\n\n  render() {\n    const { children } = this.props\n    const { sidebarOpened } = this.state\n\n    return (\n      <Media as={Sidebar.Pushable} at='mobile'>\n        <Sidebar.Pushable>\n          <Sidebar\n            as={Menu}\n            animation='overlay'\n            inverted\n            onHide={this.handleSidebarHide}\n            vertical\n            visible={sidebarOpened}\n          >\n            <Menu.Item as='a' href=\"/\">\n              Home\n            </Menu.Item>\n            <Menu.Item as='a' href=\"/docs/api\" >Documentation</Menu.Item>\n                <Menu.Item as='a' href=\"/docs/booking\" active>Booking Widget</Menu.Item>\n                <Menu.Item as='a' href=\"https://www.setster.com/scheduling-features\">\n                  Features\n                </Menu.Item>\n            <Menu.Item as='a' href=\"https://support.setster.com/hc/en-us\">Support</Menu.Item>\n            <Menu.Item as='a' href=\"https://www.setster.com/login\">Log in</Menu.Item>\n            <Menu.Item as='a' href=\"https://www.setster.com/onboarding/personal\">Sign Up</Menu.Item>\n          </Sidebar>\n\n          <Sidebar.Pusher dimmed={sidebarOpened}>\n            <Segment\n              inverted\n              textAlign='center'\n              style={{ minHeight: 350, padding: '1em 0em' }}\n              vertical\n            >\n              <Container>\n                <Menu inverted pointing secondary size='large'>\n                  <Menu.Item onClick={this.handleToggle}>\n                    <Icon name='sidebar' />\n                  </Menu.Item>\n                  <Menu.Item position='right'>\n                    {/* <Button as='a' inverted>\n                      Log in\n                    </Button> */}\n                    <Button as='a' inverted style={{ marginLeft: '0.5em' }}>\n                      Sign Up\n                    </Button>\n                  </Menu.Item>\n                </Menu>\n              </Container>\n              <HomepageHeading mobile />\n            </Segment>\n\n            {children}\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </Media>\n    )\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nconst ResponsiveContainer = ({ children }) => (\n  /* Heads up!\n   * For large applications it may not be best option to put all page into these containers at\n   * they will be rendered twice for SSR.\n   */\n  <MediaContextProvider>\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </MediaContextProvider>\n)\n\nResponsiveContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nconst Booking = () => (\n  <ResponsiveContainer style={{backgroundColor: '#fff'}}>\n<RedocStandalone specUrl={bookingOnly} options={{ noAutoAuth: true, showExtensions: [\"x-examples\", \"x-tagGroups\",  \"x-displayName\", \"x-nesting\", \"x-filters\"],\n    theme: theme\n  }}  />\n  </ResponsiveContainer>\n)\n\nexport default Booking\n"],"sourceRoot":""}